Index: thermostats/decoder/decoder.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/thermostats/decoder/decoder.go b/thermostats/decoder/decoder.go
--- a/thermostats/decoder/decoder.go	(revision af0980a7672e60ee86cf512f208d28f870e56793)
+++ b/thermostats/decoder/decoder.go	(revision 07480adcc49ac32d1f7fc9430da29be31ead8a44)
@@ -21,7 +21,7 @@
 // DecodeATCAdvertisement decodes the ATC_MiThermometer advertisement format
 // Format (13 bytes):
 // - Bytes 0-5: MAC address (big endian)
-// - Bytes 6-7: Temperature in 0.1°C (big endian signed int16)
+// - Bytes 6-7: Temperature in 0.1°C (little endian signed int16)
 // - Byte 8: Humidity in % (unsigned int8)
 // - Byte 9: Battery percentage (unsigned int8)
 // - Bytes 10-11: Battery voltage in mV (little endian unsigned int16)
@@ -35,8 +35,8 @@
 	mac := fmt.Sprintf("%02X:%02X:%02X:%02X:%02X:%02X",
 		data[0], data[1], data[2], data[3], data[4], data[5])
 
-	// Extract temperature (bytes 6-7, big endian signed int16, divide by 10)
-	tempRaw := int16(binary.BigEndian.Uint16(data[6:8]))
+	// Extract temperature (bytes 6-7, little endian signed int16, divide by 10)
+	tempRaw := int16(binary.LittleEndian.Uint16(data[6:8]))
 	temperature := float64(tempRaw) / 10.0
 
 	// Extract humidity (byte 8, unsigned int8)
